//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace VotGES.Piramida
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class Piramida3000Entities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект Piramida3000Entities, используя строку соединения из раздела "Piramida3000Entities" файла конфигурации приложения.
        /// </summary>
        public Piramida3000Entities() : base("name=Piramida3000Entities", "Piramida3000Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Piramida3000Entities.
        /// </summary>
        public Piramida3000Entities(string connectionString) : base(connectionString, "Piramida3000Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта Piramida3000Entities.
        /// </summary>
        public Piramida3000Entities(EntityConnection connection) : base(connection, "Piramida3000Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<DATA> DATA
        {
            get
            {
                if ((_DATA == null))
                {
                    _DATA = base.CreateObjectSet<DATA>("DATA");
                }
                return _DATA;
            }
        }
        private ObjectSet<DATA> _DATA;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet DATA. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDATA(DATA dATA)
        {
            base.AddObject("DATA", dATA);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Piramida3000Model", Name="DATA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DATA : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта DATA.
        /// </summary>
        /// <param name="pARNUMBER">Исходное значение свойства PARNUMBER.</param>
        /// <param name="oBJECT">Исходное значение свойства OBJECT.</param>
        /// <param name="iTEM">Исходное значение свойства ITEM.</param>
        /// <param name="oBJTYPE">Исходное значение свойства OBJTYPE.</param>
        /// <param name="dATA_DATE">Исходное значение свойства DATA_DATE.</param>
        /// <param name="sEASON">Исходное значение свойства SEASON.</param>
        public static DATA CreateDATA(global::System.Int32 pARNUMBER, global::System.Int32 oBJECT, global::System.Int32 iTEM, global::System.Int16 oBJTYPE, global::System.DateTime dATA_DATE, global::System.Int32 sEASON)
        {
            DATA dATA = new DATA();
            dATA.PARNUMBER = pARNUMBER;
            dATA.OBJECT = oBJECT;
            dATA.ITEM = iTEM;
            dATA.OBJTYPE = oBJTYPE;
            dATA.DATA_DATE = dATA_DATE;
            dATA.SEASON = sEASON;
            return dATA;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARNUMBER
        {
            get
            {
                return _PARNUMBER;
            }
            set
            {
                if (_PARNUMBER != value)
                {
                    OnPARNUMBERChanging(value);
                    ReportPropertyChanging("PARNUMBER");
                    _PARNUMBER = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARNUMBER");
                    OnPARNUMBERChanged();
                }
            }
        }
        private global::System.Int32 _PARNUMBER;
        partial void OnPARNUMBERChanging(global::System.Int32 value);
        partial void OnPARNUMBERChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OBJECT
        {
            get
            {
                return _OBJECT;
            }
            set
            {
                if (_OBJECT != value)
                {
                    OnOBJECTChanging(value);
                    ReportPropertyChanging("OBJECT");
                    _OBJECT = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OBJECT");
                    OnOBJECTChanged();
                }
            }
        }
        private global::System.Int32 _OBJECT;
        partial void OnOBJECTChanging(global::System.Int32 value);
        partial void OnOBJECTChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ITEM
        {
            get
            {
                return _ITEM;
            }
            set
            {
                if (_ITEM != value)
                {
                    OnITEMChanging(value);
                    ReportPropertyChanging("ITEM");
                    _ITEM = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ITEM");
                    OnITEMChanged();
                }
            }
        }
        private global::System.Int32 _ITEM;
        partial void OnITEMChanging(global::System.Int32 value);
        partial void OnITEMChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VALUE0
        {
            get
            {
                return _VALUE0;
            }
            set
            {
                OnVALUE0Changing(value);
                ReportPropertyChanging("VALUE0");
                _VALUE0 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE0");
                OnVALUE0Changed();
            }
        }
        private Nullable<global::System.Double> _VALUE0;
        partial void OnVALUE0Changing(Nullable<global::System.Double> value);
        partial void OnVALUE0Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VALUE1
        {
            get
            {
                return _VALUE1;
            }
            set
            {
                OnVALUE1Changing(value);
                ReportPropertyChanging("VALUE1");
                _VALUE1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VALUE1");
                OnVALUE1Changed();
            }
        }
        private Nullable<global::System.Double> _VALUE1;
        partial void OnVALUE1Changing(Nullable<global::System.Double> value);
        partial void OnVALUE1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OBJTYPE
        {
            get
            {
                return _OBJTYPE;
            }
            set
            {
                if (_OBJTYPE != value)
                {
                    OnOBJTYPEChanging(value);
                    ReportPropertyChanging("OBJTYPE");
                    _OBJTYPE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OBJTYPE");
                    OnOBJTYPEChanged();
                }
            }
        }
        private global::System.Int16 _OBJTYPE;
        partial void OnOBJTYPEChanging(global::System.Int16 value);
        partial void OnOBJTYPEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DATA_DATE
        {
            get
            {
                return _DATA_DATE;
            }
            set
            {
                if (_DATA_DATE != value)
                {
                    OnDATA_DATEChanging(value);
                    ReportPropertyChanging("DATA_DATE");
                    _DATA_DATE = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DATA_DATE");
                    OnDATA_DATEChanged();
                }
            }
        }
        private global::System.DateTime _DATA_DATE;
        partial void OnDATA_DATEChanging(global::System.DateTime value);
        partial void OnDATA_DATEChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> P2KStatus
        {
            get
            {
                return _P2KStatus;
            }
            set
            {
                OnP2KStatusChanging(value);
                ReportPropertyChanging("P2KStatus");
                _P2KStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("P2KStatus");
                OnP2KStatusChanged();
            }
        }
        private Nullable<global::System.Double> _P2KStatus;
        partial void OnP2KStatusChanging(Nullable<global::System.Double> value);
        partial void OnP2KStatusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RcvStamp
        {
            get
            {
                return _RcvStamp;
            }
            set
            {
                OnRcvStampChanging(value);
                ReportPropertyChanging("RcvStamp");
                _RcvStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RcvStamp");
                OnRcvStampChanged();
            }
        }
        private Nullable<global::System.DateTime> _RcvStamp;
        partial void OnRcvStampChanging(Nullable<global::System.DateTime> value);
        partial void OnRcvStampChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SEASON
        {
            get
            {
                return _SEASON;
            }
            set
            {
                if (_SEASON != value)
                {
                    OnSEASONChanging(value);
                    ReportPropertyChanging("SEASON");
                    _SEASON = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SEASON");
                    OnSEASONChanged();
                }
            }
        }
        private global::System.Int32 _SEASON;
        partial void OnSEASONChanging(global::System.Int32 value);
        partial void OnSEASONChanged();

        #endregion
    
    }

    #endregion
    
}
